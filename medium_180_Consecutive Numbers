Table: Logs

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| num         | varchar |
+-------------+---------+
id is the primary key for this table.
id is an autoincrement column.
 

Write an SQL query to find all numbers that appear at least three times consecutively.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Logs table:
+----+-----+
| id | num |
+----+-----+
| 1  | 1   |
| 2  | 1   |
| 3  | 1   |
| 4  | 2   |
| 5  | 1   |
| 6  | 2   |
| 7  | 2   |
+----+-----+
Output: 
+-----------------+
| ConsecutiveNums |
+-----------------+
| 1               |
+-----------------+
Explanation: 1 is the only number that appears consecutively for at least three times.
+-----------------++-----------------++-----------------++-----------------++-----------------++-----------------+

Solutions:
Use lag () and Lead () windows function to find the number before the current row and the number after that.
If the current number = number before = number after, then it is a consecutive number at least 3 times:

#1.
with cte as(
        SELECT num, 
                LAG(num,1) over (order by id) before,
                LEAD(num,1) over(order by id) after
        FROM Logs)


select distinct Num as ConsecutiveNums
from cte
where Num = before and before = after

#2 
Using sum () over () running total function. 

select distinct num as consecutiveNums
from (
    select num, c, sum(c) over (order by id) as flag
    from (
        select id, num,  
        case 
            when LAG(Num) OVER (order by id)- Num = 0 then 0 else 1 end as c
        from logs ) a
    ) b
group by num, flag
having count(flag)>=3
