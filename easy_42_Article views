Question 42
-- Table: Views

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | article_id    | int     |
-- | author_id     | int     |
-- | viewer_id     | int     |
-- | view_date     | date    |
-- +---------------+---------+
-- There is no primary key for this table, it may have duplicate rows.
-- Each row of this table indicates that some viewer viewed an article (written by some author) on some date. 
-- Note that equal author_id and viewer_id indicate the same person.
 

-- Write an SQL query to find all the authors that viewed at least one of their own articles, sorted in ascending order by their id.

-- The query result format is in the following example:

-- Views table:
-- +------------+-----------+-----------+------------+
-- | article_id | author_id | viewer_id | view_date  |
-- +------------+-----------+-----------+------------+
-- | 1          | 3         | 5         | 2019-08-01 |
-- | 1          | 3         | 6         | 2019-08-02 |
-- | 2          | 7         | 7         | 2019-08-01 |
-- | 2          | 7         | 6         | 2019-08-02 |
-- | 4          | 7         | 1         | 2019-07-22 |
-- | 3          | 4         | 4         | 2019-07-21 |
-- | 3          | 4         | 4         | 2019-07-21 |
-- +------------+-----------+-----------+------------+

-- Result table:
-- +------+
-- | id   |
-- +------+
-- | 4    |
-- | 7    |
-- +------+

-- +------------+-----------+-----------+------------+-- +------------+-----------+-----------+------------+
Solutions:
1.

CREATE TABLE Views(
article_id INT not null, 
author_id INT NOT NULL,
viewer_id int, 
view_date DATETIME
)

INSERT INTO Views(
  article_id,
  author_id,
  viewer_id,
  view_date
)
ValUES
	(1,3,5,'2019-08-01'),
    (1,3,6,'2019-08-02'),
    (2,7,7,'2019-08-01'),
    (2,7,6,'2019-08-02'),
    (4,7,1,'2019-07-22'),
    (3,4,4,'2019-07-21'),
    (3,4,4,'2019-07-21');
 
 SELECT DISTINCT v1.author_id as id
 FROM Views v1, Views v2
 WHERE v1.author_id = v2.viewer_id
 order by v1.author_id 



